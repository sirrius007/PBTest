// <auto-generated />
using System;
using DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(PBTestContext))]
    [Migration("20230305195003_DbInitSetup")]
    partial class DbInitSetup
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.3");

            modelBuilder.Entity("DataAccess.Models.Owner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Owners", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthday = new DateTime(1980, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Іван",
                            LastName = "Іваненко",
                            MiddleName = "Сергійович"
                        },
                        new
                        {
                            Id = 2,
                            Birthday = new DateTime(1985, 7, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Андрій",
                            LastName = "Садовий",
                            MiddleName = "Петрович"
                        },
                        new
                        {
                            Id = 3,
                            Birthday = new DateTime(1962, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Петро",
                            LastName = "Гриценко",
                            MiddleName = "Валерійович"
                        },
                        new
                        {
                            Id = 4,
                            Birthday = new DateTime(1992, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Ірина",
                            LastName = "Кучор",
                            MiddleName = "Валентинівна"
                        },
                        new
                        {
                            Id = 5,
                            Birthday = new DateTime(1980, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Оля",
                            LastName = "Іваненко",
                            MiddleName = "Володимирів"
                        },
                        new
                        {
                            Id = 6,
                            Birthday = new DateTime(1982, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Василина",
                            LastName = "Зінченко",
                            MiddleName = "Володимирівна"
                        });
                });

            modelBuilder.Entity("DataAccess.Models.RealEstate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Cost")
                        .HasPrecision(14, 2)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("OwnerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("RealEstates", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Ukraine, Ternopil, str. Dovjenka 10/2",
                            Cost = 40000m,
                            Name = "Avalon Number 1",
                            OwnerId = 1
                        },
                        new
                        {
                            Id = 2,
                            Address = "Ukraine, Ternopil, str. Dovjenka 10/3",
                            Cost = 42000m,
                            Name = "Avalon Number 1",
                            OwnerId = 1
                        },
                        new
                        {
                            Id = 3,
                            Address = "Ukraine, Lviv, str. Freedom 5/25",
                            Cost = 50000m,
                            Name = "New Britain",
                            OwnerId = 2
                        },
                        new
                        {
                            Id = 4,
                            Address = "Ukraine, Kyiv, str. Central 31/7",
                            Cost = 35000m,
                            Name = "Holland",
                            OwnerId = 3
                        },
                        new
                        {
                            Id = 5,
                            Address = "Ukraine, Uzhorod, str. Iv.Franka 2/6",
                            Cost = 32000m,
                            Name = "Sultan Palace",
                            OwnerId = 3
                        },
                        new
                        {
                            Id = 6,
                            Address = "Ukraine, Kharkiv, str. Sumska 15/1",
                            Cost = 41000m,
                            Name = "American Square",
                            OwnerId = 4
                        },
                        new
                        {
                            Id = 7,
                            Address = "Ukraine, Lviv, str. Zelena 11/4",
                            Cost = 47000m,
                            Name = "Viking Building",
                            OwnerId = 5
                        });
                });

            modelBuilder.Entity("DataAccess.Models.RealEstate", b =>
                {
                    b.HasOne("DataAccess.Models.Owner", "Owner")
                        .WithMany("RealEstates")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("DataAccess.Models.Owner", b =>
                {
                    b.Navigation("RealEstates");
                });
#pragma warning restore 612, 618
        }
    }
}
